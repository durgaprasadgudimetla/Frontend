{"ast":null,"code":"var _jsxFileName = \"C:\\\\Data\\\\MyProjects\\\\foodorder_react\\\\FoodOrder\\\\src\\\\components\\\\store\\\\CartProvider.js\";\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addItemToCartHandler = item => {\n  dispatchCartAction({\n    type: \"ADD\",\n    item: item\n  });\n};\n\nconst removeItemToCartHandler = id => {\n  dispatchCartAction({\n    type: \"REMOVE\",\n    id: id\n  });\n};\n\nconst defaultCartState = {\n  items: [],\n  totalAmouunt: 0\n};\nconst cartContext = {\n  items: [],\n  totalAmouunt: 0,\n  addItem: addItemToCartHandler,\n  removeItem: removeItemToCartHandler\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateItem = state.items.concat(action.item);\n    const updateTotalAmount = state.totalAmouunt + action.item.price * action.item.amount;\n    return {\n      items: updateItem,\n      totalAmouunt: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\nconst CartProvider = props => {\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Data/MyProjects/foodorder_react/FoodOrder/src/components/store/CartProvider.js"],"names":["React","useReducer","CartContext","addItemToCartHandler","item","dispatchCartAction","type","removeItemToCartHandler","id","defaultCartState","items","totalAmouunt","cartContext","addItem","removeItem","cartReducer","state","action","updateItem","concat","updateTotalAmount","price","amount","cartState","CartProvider","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAGA,MAAMC,oBAAoB,GAAIC,IAAD,IAAS;AAClCC,EAAAA,kBAAkB,CAAC;AAACC,IAAAA,IAAI,EAAC,KAAN;AAAYF,IAAAA,IAAI,EAACA;AAAjB,GAAD,CAAlB;AACH,CAFD;;AAGA,MAAMG,uBAAuB,GAAIC,EAAD,IAAO;AACnCH,EAAAA,kBAAkB,CAAC;AAACC,IAAAA,IAAI,EAAC,QAAN;AAAeE,IAAAA,EAAE,EAACA;AAAlB,GAAD,CAAlB;AACH,CAFD;;AAMA,MAAMC,gBAAgB,GAAE;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,YAAY,EAAG;AAFK,CAAxB;AAKA,MAAMC,WAAW,GAAE;AACfF,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,YAAY,EAAE,CAFC;AAGfE,EAAAA,OAAO,EAAEV,oBAHM;AAIfW,EAAAA,UAAU,EAAEP;AAJG,CAAnB;;AAOA,MAAMQ,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACjC,MAAGA,MAAM,CAACX,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMY,UAAU,GAAGF,KAAK,CAACN,KAAN,CAAYS,MAAZ,CAAmBF,MAAM,CAACb,IAA1B,CAAnB;AACA,UAAMgB,iBAAiB,GAAGJ,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACb,IAAP,CAAYiB,KAAZ,GAAoBJ,MAAM,CAACb,IAAP,CAAYkB,MAA/E;AACA,WAAO;AACHZ,MAAAA,KAAK,EAAEQ,UADJ;AAEHP,MAAAA,YAAY,EAAES;AAFX,KAAP;AAIH;;AACD,SAAOX,gBAAP;AACH,CAVD;;AAYA,MAAK,CAACc,SAAD,EAAWlB,kBAAX,IAAiCJ,UAAU,CAACc,WAAD,EAAaN,gBAAb,CAAhD;;AAEA,MAAMe,YAAY,GAAGC,KAAK,IAAG;AACzB,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEb,WAA7B;AAAA,cACFa,KAAK,CAACC;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAJD;;KAAMF,Y;AAKN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\nconst addItemToCartHandler = (item) =>{\r\n    dispatchCartAction({type:\"ADD\",item:item})\r\n}\r\nconst removeItemToCartHandler = (id) =>{\r\n    dispatchCartAction({type:\"REMOVE\",id:id})\r\n}\r\n\r\n\r\n\r\nconst defaultCartState ={\r\n    items :[],\r\n    totalAmouunt : 0\r\n}\r\n\r\nconst cartContext ={\r\n    items: [],\r\n    totalAmouunt: 0,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemToCartHandler\r\n}\r\n\r\nconst cartReducer = (state,action) =>{\r\n    if(action.type === 'ADD'){\r\n        const updateItem = state.items.concat(action.item);\r\n        const updateTotalAmount = state.totalAmouunt + action.item.price * action.item.amount;\r\n        return {\r\n            items: updateItem,\r\n            totalAmouunt: updateTotalAmount\r\n        }\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\nconst[cartState,dispatchCartAction] = useReducer(cartReducer,defaultCartState)\r\n\r\nconst CartProvider = props =>{\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n}\r\nexport default CartProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}