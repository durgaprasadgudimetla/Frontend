{"ast":null,"code":"var _jsxFileName = \"C:\\\\Data\\\\MyProjects\\\\foodorder_react\\\\FoodOrder\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmouunt: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateTotalAmount = state.totalAmouunt + action.item.price * action.item.amount;\n    const existingCartIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (existingCartItem) {\n      updateItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n    }\n\n    updatedItems = [...state.items];\n    updatedItems[existingCartIndex] = updateItem;\n    const updateItem = state.items.concat(action.item);\n    return {\n      items: updateItem,\n      totalAmouunt: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmouunt,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Data/MyProjects/foodorder_react/FoodOrder/src/components/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmouunt","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingCartIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","updateItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","totalAmount","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAMA,MAAMC,gBAAgB,GAAE;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,YAAY,EAAG;AAFK,CAAxB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACjC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AAErB,UAAMC,iBAAiB,GAAGH,KAAK,CAACF,YAAN,GAAqBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AACA,UAAMC,iBAAiB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAuBJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAxD,CAA1B;AACA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,iBAAZ,CAAzB;AACA,QAAII,WAAJ;AACA,QAAIC,YAAJ;;AACA,QAAGF,gBAAH,EAAoB;AAChBG,MAAAA,UAAU,GAAC,EACP,GAAGH,gBADI;AAEPJ,QAAAA,MAAM,EAACI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAFtC,OAAX;AAIH;;AAEDM,IAAAA,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAf;AACAe,IAAAA,YAAY,CAACL,iBAAD,CAAZ,GAAkCM,UAAlC;AAEA,UAAMA,UAAU,GAAGb,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmBb,MAAM,CAACG,IAA1B,CAAnB;AACA,WAAO;AACHP,MAAAA,KAAK,EAAEgB,UADJ;AAEHf,MAAAA,YAAY,EAAEK;AAFX,KAAP;AAIH;;AACD,SAAOP,gBAAP;AACH,CAzBD;;AA6BA,MAAMmB,YAAY,GAAGC,KAAK,IAAG;AAAA;;AAGzB,QAAK,CAACC,SAAD,EAAWC,kBAAX,IAAiCxB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAhD;;AAGA,QAAMuB,oBAAoB,GAAIf,IAAD,IAAS;AAClCc,IAAAA,kBAAkB,CAAC;AAAChB,MAAAA,IAAI,EAAC,KAAN;AAAYE,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMgB,uBAAuB,GAAIX,EAAD,IAAO;AACnCS,IAAAA,kBAAkB,CAAC;AAAChB,MAAAA,IAAI,EAAC,QAAN;AAAeO,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACH,GAFD;;AAKA,QAAMY,WAAW,GAAE;AACfxB,IAAAA,KAAK,EAACoB,SAAS,CAACpB,KADD;AAEfyB,IAAAA,WAAW,EAAEL,SAAS,CAACnB,YAFR;AAGfyB,IAAAA,OAAO,EAAEJ,oBAHM;AAIfK,IAAAA,UAAU,EAAEJ;AAJG,GAAnB;AASA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACS;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CA1BD;;GAAMV,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\n\r\n\r\n\r\nconst defaultCartState ={\r\n    items :[],\r\n    totalAmouunt : 0\r\n}\r\n\r\nconst cartReducer = (state,action) =>{\r\n    if(action.type === 'ADD'){\r\n        \r\n        const updateTotalAmount = state.totalAmouunt + action.item.price * action.item.amount;\r\n        const existingCartIndex = state.items.findIndex((item) => item.id === action.item.id)\r\n        const existingCartItem = state.items[existingCartIndex];\r\n        let updatedItem;\r\n        let updatedItems;\r\n        if(existingCartItem){\r\n            updateItem={\r\n                ...existingCartItem,\r\n                amount:existingCartItem.amount + action.item.amount\r\n            }\r\n        }\r\n\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartIndex] = updateItem;\r\n\r\n        const updateItem = state.items.concat(action.item);\r\n        return {\r\n            items: updateItem,\r\n            totalAmouunt: updateTotalAmount\r\n        }\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\n\r\n\r\nconst CartProvider = props =>{\r\n\r\n\r\n    const[cartState,dispatchCartAction] = useReducer(cartReducer,defaultCartState);\r\n\r\n    \r\n    const addItemToCartHandler = (item) =>{\r\n        dispatchCartAction({type:\"ADD\",item:item})\r\n    }\r\n    const removeItemToCartHandler = (id) =>{\r\n        dispatchCartAction({type:\"REMOVE\",id:id})\r\n    }\r\n\r\n\r\n    const cartContext ={\r\n        items:cartState.items,\r\n        totalAmount: cartState.totalAmouunt,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemToCartHandler\r\n    }\r\n\r\n\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n}\r\nexport default CartProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}